C51 COMPILER V9.60.0.0   DATE_LINE_1_TIME_LINE_2                                           07/20/2020 15:33:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DATE_LINE_1_TIME_LINE_2
OBJECT MODULE PLACED IN .\Objects\date_line_1_time_line_2.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE date_line_1_time_line_2.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\date_line_1_time_line_2.lst) TABS(2) OBJECT(.\Objects\date_line_1_time_line_2.obj)

line level    source

   1          #include<reg52.h>
   2          #include<string.h>
   3          
   4          sbit rs = P2^3; // register select
   5          sbit rw = P2^4; // read/write
   6          sbit en = P2^5; // read/write enable
   7          
   8          char seconds = 0;
   9          char minutes = 0;
  10          
  11          char yourdata1[] ={"2020/7/19"};
  12          char yourdata2[] ={"14:12:00 "};
  13          
  14          sbit move = P3^4;
  15          sbit decrease = P3^5;
  16          sbit increase = P3^6;
  17          sbit setWatch = P3^7;
  18          
  19          void lcd_init(); // lcd initialization
  20          void write_com(char com); //write command
  21          void write_data(char _data); // write data
  22          
  23          void delay(char x);// delay function
  24          void main()
  25          {
  26   1        char i;
  27   1        char setWatchFlag = 0;
  28   1        char position = 7;
  29   1        lcd_init();
  30   1        delay(20);
  31   1        
  32   1          //first information
  33   1          //display on line 1
  34   1          write_com(0x80);
  35   1          delay(10);
  36   1          
  37   1          for(i =0; i<strlen(yourdata1); i++)
  38   1          {
  39   2            write_data(yourdata1[i]);
  40   2            delay(10);
  41   2          }
  42   1          //display on line 2
  43   1          write_com(0xc0);
  44   1          delay(10);
  45   1          
  46   1          for(i =0; i<strlen(yourdata2); i++)
  47   1          {
  48   2            write_data(yourdata2[i]);
  49   2            delay(10);
  50   2          }
  51   1        
  52   1        while(1)
  53   1        {
  54   2          // setting the watch
C51 COMPILER V9.60.0.0   DATE_LINE_1_TIME_LINE_2                                           07/20/2020 15:33:59 PAGE 2   

  55   2          if(setWatch==0)
  56   2          {
  57   3            delay(10);
  58   3            if(setWatch==0)
  59   3            {
  60   4              setWatchFlag = 1;
  61   4              write_com(0xc0+7);
  62   4              write_com(0x0f);
  63   4            }
  64   3          }
  65   2          // moving to seconds , minutes and hours
  66   2          if(move==0&&setWatchFlag==1)
  67   2          {
  68   3            delay(10);
  69   3            if(move==0&&setWatchFlag==1)
  70   3            {
  71   4              
  72   4              while(move==0);
  73   4              
  74   4              position = position -3;
  75   4              if(position<0)
  76   4              {
  77   5                position = 7;
  78   5              }
  79   4              write_com(0xc0+position);
  80   4            }
  81   3          }
  82   2          //increasing seconds, minutes, hours
  83   2          if(increase==0&&setWatchFlag)
  84   2          {
  85   3            delay(10);
  86   3            if(increase==0&&setWatchFlag)
  87   3            {
  88   4              
  89   4              //seconds
  90   4              seconds++;
  91   4              write_com(0xc0+6);
  92   4              write_data(seconds/10+48);
  93   4              write_com(0xc0+7);
  94   4              write_data(seconds%10+48);
  95   4              //minutes
  96   4              
  97   4              //hours
  98   4            }
  99   3          }
 100   2          
 101   2          if(!setWatchFlag)
 102   2          {
 103   3            delay(10);
 104   3            seconds++;
 105   3            if(seconds>12)
 106   3            {
 107   4              seconds =0;
 108   4              minutes++;
 109   4              write_com(0xc0+3);
 110   4              write_data(minutes/10+48);
 111   4              write_com(0xc0+4);
 112   4              write_data(minutes%10+48);
 113   4            }
 114   3            else
 115   3            {
 116   4              write_com(0xc0+6);
C51 COMPILER V9.60.0.0   DATE_LINE_1_TIME_LINE_2                                           07/20/2020 15:33:59 PAGE 3   

 117   4              write_data(seconds/10+48);
 118   4              write_com(0xc0+7);
 119   4              write_data(seconds%10+48);
 120   4            }
 121   3          }
 122   2        }
 123   1      }
 124          
 125          void lcd_init() // lcd initialization
 126          {
 127   1          // prepare the screen ->16*2 cells, 5*7 matrix for each cell
 128   1          write_com(0x38);
 129   1          // turn on display
 130   1          write_com(0x08);
 131   1          // clear the screen
 132   1          write_com(1);
 133   1          // prepare cursor and data pointer
 134   1          write_com(6);
 135   1          // cursor setup
 136   1          write_com(0x0c);
 137   1          
 138   1      }
 139          void write_com(char com) //write command
 140          {
 141   1        rs = 0; rw =0; P0 = com;
 142   1        en = 0;
 143   1        delay(10);
 144   1        en = 1;
 145   1        delay(10);
 146   1        en = 0;
 147   1      }
 148          void write_data(char _data) // write data
 149          {
 150   1        rs = 1;  rw = 0; P0 = _data;
 151   1        en = 0;
 152   1        delay(10);
 153   1        en = 1;
 154   1        delay(10);
 155   1        en = 0;
 156   1        
 157   1      }
 158          
 159          void delay(char x)// delay function
 160          {
 161   1        char y;
 162   1        while(x--)
 163   1          for(y =0; y<120; y++);
 164   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    468    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
