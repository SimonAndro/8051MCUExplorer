C51 COMPILER V9.60.0.0   AUO_LIGHTS_SIMULATION                                             07/23/2020 15:07:32 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE AUO_LIGHTS_SIMULATION
OBJECT MODULE PLACED IN .\Objects\auo_lights_simulation.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE ..\..\..\..\analog_to_digital\auo_lights_simulation.c OPTIMIZE(8,SPEED) BRO
                    -WSE DEBUG OBJECTEXTEND PRINT(.\Listings\auo_lights_simulation.lst) TABS(2) OBJECT(.\Objects\auo_lights_simulation.obj)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          
   4          
   5          sbit Scl = P2^1;
   6          sbit Sda = P2^0;
   7          sbit selectionLatch = P2^7;
   8          sbit dataLatch = P2^6;
   9          
  10          unsigned char upperThres = 160; 
  11          unsigned char lowerThres = 50; 
  12          
  13          unsigned char code segData[] =     // 0 to 9 codes for segment display
  14          {0x3f,0x06,0x5b,
  15          0x4f,0x66,0x6d,
  16          0x7d,0x07,0x7f,0x6f}; 
  17          
  18          unsigned  char code segment[] =    // selection choice for one of the 6 display segments
  19          {0xfe,0xfd,0xfb,
  20          0xf7,0xef,0xdf};
  21          
  22          
  23          void iic_start();     // start condition for data transmision on the IIC protocol           
  24          void iic_send(unsigned char _data); // sending serial data using the IIC protocol
  25          unsigned char iic_read();   // reading serial data using the IIC protocol
  26          void iic_ack();     // acknowledge bit after sending a data byte
  27          void iic_noAck();   // no acknowledge after receiving the last byte 
  28          void iic_stop();    // stop condition after data transmision on the IIC protocol   
  29          void myDAC(unsigned char _byte); // digital to analog conversion
  30          unsigned char ADC(unsigned char channel); // analog to digital conversion
  31          
  32          void delay(char x);// delay function
  33          void seg_disp(char seconds, char minutes); // display to the 7 segment
  34            
  35          void main()
  36          {
  37   1        unsigned char num = 0;
  38   1        unsigned char flag = 0;
  39   1        unsigned char count = 0;
  40   1        unsigned char channel = 0;
  41   1        num = ADC(channel);
  42   1      
  43   1        while(1)
  44   1        {
  45   2          count ++;
  46   2          if(count>=100)
  47   2          {
  48   3              num = ADC(channel); 
  49   3              if(num>=upperThres)
  50   3              {
  51   4                // turn on the LEDs
  52   4                P1 = 0;
  53   4              }
  54   3              else if(num<=lowerThres)
C51 COMPILER V9.60.0.0   AUO_LIGHTS_SIMULATION                                             07/23/2020 15:07:32 PAGE 2   

  55   3              {
  56   4                // turn off the LEDs
  57   4                P1 = 0xff;
  58   4              }
  59   3          }
  60   2            
  61   2          seg_disp(num,0);
  62   2        }
  63   1      }
  64          void iic_start()
  65          {
  66   1        
  67   1        Scl = 1;
  68   1        _nop_();
  69   1        Sda = 1;
  70   1        _nop_();
  71   1        Sda = 0;
  72   1        
  73   1      }
  74          void iic_send(unsigned char _data)
  75          {
  76   1        char oneByte = 8;
  77   1        char temp = 0x80; // 1000 0000
  78   1        //1000 0000
  79   1        //0XXX XXXX
  80   1        //1XXX XXXX
  81   1        
  82   1        while(oneByte)
  83   1        {
  84   2          Scl = 0;   // added new line 1
  85   2          if((temp&_data)==0)
  86   2          //if(temp&_data==0) // changed this line 
  87   2          {
  88   3            Sda = 0;
  89   3          }
  90   2          else
  91   2          {
  92   3            Sda = 1;
  93   3          }
  94   2          Scl = 0;
  95   2          _nop_();
  96   2          Scl = 1;
  97   2          _nop_();  // added new line 2
  98   2          Scl = 0;  // added new line 3
  99   2          
 100   2          _data = _data<<1;
 101   2          oneByte--;
 102   2        }
 103   1        
 104   1      }
 105          
 106          unsigned char iic_read()
 107          {
 108   1           unsigned char check = 0x80;
 109   1           unsigned char read = 0;
 110   1           unsigned char bitCount=8;
 111   1      
 112   1           Sda=1;
 113   1           while(bitCount)
 114   1           {
 115   2            Scl=0;
 116   2                _nop_();
C51 COMPILER V9.60.0.0   AUO_LIGHTS_SIMULATION                                             07/23/2020 15:07:32 PAGE 3   

 117   2            Scl=1;
 118   2            _nop_();
 119   2            if(Sda==1)
 120   2            {
 121   3              read = read|check;
 122   3            }
 123   2            check = check>>1;
 124   2            bitCount--;
 125   2          }
 126   1          return(read);
 127   1      }
 128          
 129          void iic_ack()
 130          {
 131   1        Sda = 0;
 132   1        Scl = 0;
 133   1        _nop_();
 134   1        Scl = 1;
 135   1        _nop_();
 136   1        Scl = 0;
 137   1        
 138   1      }
 139          void iic_noAck()
 140          {
 141   1        Scl = 0;
 142   1        Sda = 1;
 143   1        _nop_();
 144   1        Scl = 1;
 145   1        _nop_();
 146   1        Scl = 0;
 147   1        
 148   1      }
 149          void iic_stop()
 150          {
 151   1        Scl = 1;
 152   1        _nop_();
 153   1        Sda = 0;
 154   1        _nop_();
 155   1        Sda = 1;
 156   1        
 157   1      }
 158          
 159          void myDAC(unsigned char _byte)
 160          {
 161   1        iic_start();
 162   1        iic_send(0x90); // write to D/A convertor
 163   1        iic_ack();
 164   1        iic_send(0x40); //enable analog out
 165   1        iic_ack();
 166   1        iic_send(_byte); // send data
 167   1        iic_ack();
 168   1        iic_stop();
 169   1      } 
 170            
 171          
 172          
 173          void delay(unsigned char x)// delay function
 174          {
 175   1        char y;
 176   1        while(x--)
 177   1          for(y =0; y<120; y++);
 178   1      }
C51 COMPILER V9.60.0.0   AUO_LIGHTS_SIMULATION                                             07/23/2020 15:07:32 PAGE 4   

 179          
 180          
 181          void seg_disp(unsigned char seconds, unsigned char minutes) // display to the 7 segment
 182          {
 183   1            char tens, ones;
 184   1            char mtens, mones;
 185   1            char t = 1; 
 186   1        
 187   1            tens = seconds/50;
 188   1            ones = (seconds%50)/10;
 189   1        
 190   1            mtens = minutes/10;
 191   1            mones = minutes%10;
 192   1        
 193   1            //seconds
 194   1            P0 = segment[5];
 195   1            selectionLatch = 1;
 196   1            selectionLatch = 0;
 197   1            
 198   1            P0 = segData[ones]; 
 199   1            dataLatch = 1;
 200   1            dataLatch = 0;
 201   1            delay(t);
 202   1            P0 = segment[4];
 203   1            selectionLatch = 1;
 204   1            selectionLatch = 0;
 205   1        
 206   1            P0 = segData[tens]|0x80; 
 207   1            dataLatch = 1;
 208   1            dataLatch = 0;
 209   1            delay(t);
 210   1            // minutes
 211   1            /*
 212   1            P0 = segment[3];
 213   1            selectionLatch = 1;
 214   1            selectionLatch = 0;
 215   1            
 216   1            P0 = segData[mones]; 
 217   1            dataLatch = 1;
 218   1            dataLatch = 0;
 219   1            delay(t);
 220   1            P0 = segment[2];
 221   1            selectionLatch = 1;
 222   1            selectionLatch = 0;
 223   1        
 224   1            P0 = segData[mtens]; 
 225   1            dataLatch = 1;
 226   1            dataLatch = 0;
 227   1            delay(t);
 228   1            */
 229   1      }
 230          
 231          unsigned char ADC(unsigned char channel)
 232          {
 233   1        char readData;
 234   1        iic_start();
 235   1        iic_send(0x90); // write to D/A convertor
 236   1        iic_ack();
 237   1        iic_send(0x40|channel); //enable analog out and read from channel
 238   1        iic_ack();
 239   1        
 240   1        iic_start();
C51 COMPILER V9.60.0.0   AUO_LIGHTS_SIMULATION                                             07/23/2020 15:07:32 PAGE 5   

 241   1        iic_send(0x91); // send read address
 242   1        iic_ack();
 243   1        readData = iic_read();
 244   1        iic_noAck();
 245   1        iic_stop();
 246   1        return readData;
 247   1      } 
 248          
 249            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    380    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
